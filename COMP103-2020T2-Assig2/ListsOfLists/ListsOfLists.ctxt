#BlueJ class context
comment0.target=ListsOfLists
comment0.text=ListsOfLists
comment1.params=lists
comment1.target=java.util.List\ appendAll(java.util.List)
comment1.text=\n\ Given\ a\ list\ of\ lists\ of\ Things,\ append\ all\ the\ lists\ into\ a\ single\ list\ and\ return\ it.\n\ The\ method\ should\ not\ modify\ the\ lists.\n
comment2.params=lists
comment2.target=java.util.List\ mergeZipped(java.util.List)
comment2.text=\n\ Given\ a\ list\ of\ lists\ of\ Things,\n\ merge\ the\ lists\ into\ a\ single\ list,\ containing\ all\ the\ first\ elements\ of\ the\ lists,\n\ followed\ by\ all\ the\ second\ elements\ of\ the\ lists,\ etc.\n\ The\ lists\ do\ not\ need\ to\ be\ the\ same\ size\n\ The\ method\ should\ not\ modify\ the\ lists.\n
comment3.params=lists
comment3.target=java.util.List\ mergeSorted(java.util.List)
comment3.text=\n\ Given\ a\ list\ of\ _sorted_\ lists\ of\ Things\ (ie,\ the\ Things\ in\ each\ list\ are\ in\ order)\n\ Merge\ the\ lists\ into\ a\ single\ list,\ in\ sorted\ order.\n\ None\ of\ the\ lists\ contain\ null.\n\ At\ each\ step\:\n\ \ Find\ the\ next\ item\ to\ add\ to\ the\ answer\ by\ looking\ at\ the\ front\ item\ of\ each\ list\ to\ find\ the\ smallest.\n\ \ Move\ that\ item\ from\ the\ list\ to\ the\ answer.\n\ The\ lists\ may\ not\ be\ the\ same\ size\n\ The\ method\ may\ not\ modify\ the\ lists\n
comment4.params=
comment4.target=void\ setupGUI()
comment4.text=\n\ Setup\ the\ GUI\n
comment5.params=
comment5.target=void\ testAppendAll()
comment5.text=Test\ the\ appendAll\ method
comment6.params=
comment6.target=void\ testMergeZipped()
comment6.text=Test\ the\ mergeZipped\ method
comment7.params=
comment7.target=void\ testMergeSorted()
comment7.text=Test\ the\ mergeSorted\ method
comment8.params=arguments
comment8.target=void\ main(java.lang.String[])
comment9.params=
comment9.target=void\ checkCompile()
comment9.text=\n\ Does\ nothing,\ but\ compiling\ with\ this\ method\ ensures\ that\ the\ method\n\ \ headers\ have\ not\ been\ changed.\n
numComments=10
